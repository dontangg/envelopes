# Place all the behaviors and hooks related to the matching controller here.
<% url = Envelopes::Application.routes.url_helpers %>

setCurrentDateRange = ->
  startDate = $('#date_range_picker .start').datepicker('getDate')
  endDate = $('#date_range_picker .end').datepicker('getDate')
  $('#date_range_picker .start').datepicker("option", "maxDate", endDate)
  $('#date_range_picker .end').datepicker("option", "minDate", startDate)

  startDateText = $.datepicker.formatDate 'M d, yy', startDate
  endDateText = $.datepicker.formatDate 'M d, yy', endDate
  $('#date_range_picker .current').text(startDateText + " - " + endDateText)

cancelDatePicker = (event) ->
  if $('#date_range_picker .popup').is(':visible')
    $('#date_range_picker .popup').hide()
    $('#date_range_picker .start').datepicker('setDate', $('#date_range_picker .start').data('initialDate'))
    $('#date_range_picker .end').datepicker('setDate', $('#date_range_picker .end').data('initialDate'))
    setCurrentDateRange()

@setupTransactionsList = ->
  if $('#date_range_picker').length > 0
    $('#date_range_picker').click (event) ->
      event.stopPropagation()
      $(this).children('.popup').show()

    $('html').click cancelDatePicker
    $('#date_range_picker .actions a').click (event) ->
      event.preventDefault()
      event.stopPropagation()
      cancelDatePicker()

    $('#date_range_picker .start').datepicker
      onSelect: setCurrentDateRange
      dateFormat: 'yy-mm-dd'
      altField: '#start_date'
      defaultDate: $('#date_range_picker .start').data('initialDate')
    $('#date_range_picker .end').datepicker
      onSelect: setCurrentDateRange
      dateFormat: 'yy-mm-dd'
      altField: '#end_date'
      defaultDate: $('#date_range_picker .end').data('initialDate')
    setCurrentDateRange()

  if $('#transactions_list').length > 0
    $('select').selectToAutocomplete()

    $('#transactions_list input').selectOnFocus()

    $('#transactions_list .payee input').autocomplete
      source: "<%= CGI.unescape url.suggest_payee_transactions_path %>"
      minLength: 2

    $('#update_all_transactions')
      .on('ajax:beforeSend', ->
        cancelDatePicker()
        $('#update_all_transactions .loading-overlay').css('opacity', 0.7).show()
      ).on('ajax:error', (event, xhr, status, error) ->
        showAlert error
        $('#update_all_transactions .loading-overlay').hide()
      )


###
# On DOM Ready
###

$ ->
  $('#dashboard > ul').masonry
    itemSelector: '#dashboard > ul > li',
    columnWidth: 250,
    gutterWidth: 40,
    isAnimated: true

  ###
  # Show envelope
  ###

  setupTransactionsList()

  $('#envelope_details').popover
    html: true
    selector: 'tr.transaction'
    trigger: 'hover'
    container: 'body'

  $('#envelope_details').on 'click', 'tr.transaction .actions button', (event) ->
    event.preventDefault()

    tr = $(this).closest('tr')
    content = $(tr.data('content'))

    modal = $('#edit-txn-modal')
    modal.find('form').on('ajax:beforeSend', ->
      modal.find('.loading').css('display', 'inline-block')
    ).on('ajax:error', (event, xhr, status, error) ->
      showAlert error
      modal.find('.loading').hide()
    ).unbind('ajax:success').on('ajax:success', ->
      # TODO: get popover content from ajax response (it is a pain to maintain it correctly). I'm currently not correctly handling the case where notes are removed.
      # Update the popover
      notesContainer = content.find('.notes')
      if notesContainer.length
        notesContainer.text $('#transaction_notes').val()
      else
        content.append('<h4>Notes</h4><div class="notes">' + $('#transaction_notes').val() + '</div>')
      tr.data('content', content[0].outerHTML)
      tr.attr('data-content', content[0].outerHTML)

      $('#edit-txn-modal').modal('hide')
      modal.find('.loading').hide()
    )

    # Put the notes in the field in the modal
    $('#transaction_notes').val content.find('.notes').text()
    # Make sure the popover is hidden
    tr.popover('destroy')

    # Update the form's action URL to contain the transaction id
    id = $(this).data('txn-id')
    url = "<%= url.transaction_path('id') %>"
    modal.find('form').attr('action', url.replace(/id$/, id))

  autosave '#envelope_details', 'blur', '.payee input, .amount input', "<%= CGI.unescape url.transaction_path('{id}') %>"
  autosave '#envelope_details', 'change', 'select', "<%= CGI.unescape url.transaction_path('{id}') %>"

  $('#envelope_details').on 'blur', '.amount input', ->
    $this = $(this)
    associated_transaction = $('#transaction_' + $this.data('associated-transaction-id'))
    if associated_transaction.length > 0
      newAmount = parseFloat($this.val().replace(/[^-.0-9]/g, "")) * -1
      associated_transaction.find('.amount input').val(newAmount.toFixed(2).replace /([.0-9]+)/g, "$$$1")

  $('#envelope_aside .transfer').click ->
    modal = '#transfer-modal'

    modal.find('form').on('ajax:beforeSend', ->
      modal.find('.loading').show()
    ).on('ajax:error', (event, xhr, status, error) ->
      showAlert error
      modal.find('.loading').hide()
    )

    # Remove the selectToAutocomplete HTML if it was added previously, then setup selectToAutocomplete again
    modal.find('.ui-helper-hidden-accessible, .ui-autocomplete-input').remove()
    modal.find('select').show().selectToAutocomplete()
    modal.find('input[type=text], input:not([type])').selectOnFocus()

  graph_container = $('.graph-monthly-spending')
  if graph_container.length > 0
    # Put the budget line in the right place
    budget_line = $('.budget-line', graph_container)
    budget_line.css
      left: graph_container.find('th').outerWidth() + graph_container.find('td').width() * budget_line.data('percent') / 100
    # Put the budget amount in a suitable place
    budget_amount = $('.budget-amount', graph_container)
    tmp_left = parseInt(budget_line.css('left')) - budget_amount.outerWidth() / 2
    tmp_left = 0 if tmp_left < 0 # Make sure it's not off left left end
    max_left = graph_container.outerWidth() - budget_amount.outerWidth()
    tmp_left = max_left if tmp_left > max_left # Make sure it's not off right left end
    budget_amount.css
      left: tmp_left


  ###
  # Manage Envelopes
  ###

  $('#manage_envelopes input[type=text], input:not([type])').selectOnFocus()

  # Setup the note button
  $('#manage_envelopes_list').on 'click', '.note', ->
    button = $(this)
    note_input = button.find('input')
    modal = $('#envelope-note-modal')
    modal.find('textarea')
      .on 'blur', ->
        note_input.val $(this).val().trim()
        note_input.blur() # Invoke the autosave stuff
        if note_input.val()
          button.addClass 'note-present'
          button.removeClass 'note-blank'
        else
          button.addClass 'note-blank'
          button.removeClass 'note-present'
      .val note_input.val()

  # Setup the new envelope modal
  $('#new-envelope-modal').on 'show.bs.modal', ->
    $(this).find('form')[0].reset()
    modal = $('#new-envelope-modal')

    # Remove the selectToAutocomplete HTML if it was added previously, then setup selectToAutocomplete again
    modal.find('.ui-helper-hidden-accessible, .ui-autocomplete-input').remove()
    modal.find('select').show().selectToAutocomplete
      'remove-valueless-options': false
    modal.find('input[type=text], input:not([type])').selectOnFocus()

  initChart = (chart_data) ->
    count_function = (d) -> d.amount

    label_function = (d) -> d.name + ": " + numberToCurrency(d.amount)

    legend_function = (d) -> "<h4>" + d.name + "</h4><p>" + (if d.amount then numberToCurrency(d.amount) else '&nbsp;') + "</p>"

    color = d3.scale.category20c()

    color_function = (d) -> color(d.name)

    d3.select(self.frameElement).style("height", "800px")
    init_hierarchy_plot "hierarchy_chart", chart_data, count_function, color_function, label_function, legend_function

  $('#chart-modal').on 'shown.bs.modal', ->
    # Update chart data
    rootDataItem =
      name: 'Monthly Budget'
      amount: 0
      children: []
    $('.envelope').each (i, item) ->
      $envelope = $(item)
      $name = $envelope.find('.name')

      indentLevel = +$name.attr('class').match(/indent-(\d)/)[1]
      envelopeName = $name.find('input').val();
      amount = getAmount $envelope.find('.expense-amount input').val()

      if amount
        frequency_text = $envelope.find('.expense-frequency div').text()
        if frequency_text.indexOf("month") == -1
          amount = amount / 12

      newDataItem =
        name: envelopeName
        amount: amount || 0,
        children: []

      rootEnvelopes = rootDataItem.children

      rootDataItem.amount += amount if amount

      if indentLevel == 0
        rootEnvelopes.push newDataItem
      else
        rootEnvelope = rootEnvelopes[rootEnvelopes.length - 1]

        rootEnvelope.amount += amount if amount

        midLevelEnvelopes = rootEnvelope.children

        if indentLevel == 1
          newDataItem.name = "#{rootEnvelope.name}: #{newDataItem.name}"
          midLevelEnvelopes.push newDataItem
        else
          midLevelEnvelope = midLevelEnvelopes[midLevelEnvelopes.length - 1]

          midLevelEnvelope.amount += amount if amount

          newDataItem.name = "#{midLevelEnvelope.name}: #{newDataItem.name}"

          # indentLevel is 2 if it's not 0 or 1
          midLevelEnvelope.children.push newDataItem

    console.log rootDataItem if console
    initChart rootDataItem


  autosave '#manage_envelopes', 'blur', 'input, select', "<%= CGI.unescape url.envelope_path('{id}') %>"

  $('#manage_envelopes .destroy').click ->
    $this = $(this)
    modal = $('#destroy-envelope-modal')

    $envelope_parent = $this.closest('li')
    envelope_id = $envelope_parent.data('envelope-id')
    envelope_name = $envelope_parent.find('.name input').val()

    modal.find('form').attr('action', '<%= CGI.unescape url.envelope_path("{id}") %>'.replace("{id}", envelope_id))[0].reset()
    modal.find('#destroy_envelope_name').text envelope_name

    # Remove the selectToAutocomplete HTML if it was added previously, then setup selectToAutocomplete again
    modal.find('.ui-helper-hidden-accessible, .ui-autocomplete-input').remove()
    modal.find('select').show().selectToAutocomplete()

    modal.find('input[type=text], input:not([type])').selectOnFocus()


  # Handle expense frequency popover
  $('td.expense-frequency > div').click (event) ->
    event.stopPropagation()
    $this = $(this)
    $('td.expense-frequency > div').not($this).popover 'hide'
    $this.popover 'show'
    $('.popover .btn-default').click ->
      $this.popover 'hide'
  if $('td.expense-frequency > div').length > 0
    $(document).click (event) ->
      $('td.expense-frequency > div').popover 'hide' unless $(event.target).closest('.popover').length

  # Keep the total monthly budget amount updated
  $('.envelope .amount input').keyup ->
    monthly_amount = 0

    $('.envelope .amount input').each (i, item) ->
      $item = $(item)
      amount = getAmount $item.val()
      frequency_text = $item.closest('tr').find('.expense-frequency div').text()
      if frequency_text.indexOf("month") == -1
        monthly_amount += amount / 12
      else
        monthly_amount += amount

    $('#envelopes_aside .budgeted').text numberToCurrency(monthly_amount)

  $('.envelope .amount input').trigger('keyup')

  ###
  # Fill Envelopes
  ###

  $('#fill_envelopes input[type=text]')
    .selectOnFocus()
    .on 'keyup', ->
      $this = $(this)

      total = 0
      parent = $this.parent().closest('ul')
      parent.find('input').each (index, item) ->
        total += getAmount(item.value) || 0
      parent.prev().find('.sum').text(numberToCurrency(total))

      total = 0
      grandParent = parent.parent().closest('ul')
      grandParent.find('input').each (index, item) ->
        total += getAmount(item.value) || 0
      grandParent.prev().find('.sum').text(numberToCurrency(total))

      total = 0
      $('#fill_envelopes input[type=text]').each (index, item) ->
        total += getAmount(item.value) || 0
      totalAllocation = numberToCurrency(total * -1)
      totalAllocation = "-" + totalAllocation if total == 0
      totalAllocation = "+" + totalAllocation if total < 0
      $('#fill_aside .allocation').text(totalAllocation)
      available = getAmount $('#fill_aside .available').text()
      $('#fill_aside .remaining').text numberToCurrency(available - total)


  $('#fill_envelopes .collapse-button').click (event) ->
    event.preventDefault()
    $this = $(this)
    childEnvelopes = $this.closest('li').children('ul')
    childEnvelopes.slideToggle ->
      icon = $this.find('.glyphicon')
      if childEnvelopes.is ':visible'
        icon.addClass('glyphicon-collapse-down').removeClass('glyphicon-expand')
      else
        icon.addClass('glyphicon-expand').removeClass('glyphicon-collapse-down')

