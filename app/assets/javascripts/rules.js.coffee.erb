# Place all the behaviors and hooks related to the matching controller here.
<% url = Envelopes::Application.routes.url_helpers %>

$ ->
  $('#rules select').selectToAutocomplete()
  $('#rules input[type=text], #rules input:not([type])]').selectOnFocus()

  $('#rules .replacement-text input').autocomplete
    source: "<%= CGI.unescape url.suggest_payee_transactions_path %>"
    minLength: 2
  
  $('#rules .search-text input').autocomplete
    source: "<%= CGI.unescape url.suggest_payee_transactions_path %>?original=1"
    minLength: 2
  
  autosave '#rules', 'blur', '.search-text input, .replacement-text input', "<%= CGI.unescape url.rule_path('{id}') %>"
  autosave '#rules', 'change', 'select', "<%= CGI.unescape url.rule_path('{id}') %>"
  
  $('#rules_aside .new').click ->
    modal = showModal
      content: '#new_rule_modal'
      width: 520
      className: 'new-rule-modal'
    
    modal.find('form').on('ajax:beforeSend', ->
      modal.find('.loading').show()
    ).on('ajax:success', (event, data, status, xhr) ->
      setAltRowClass()
    ).on('ajax:error', (event, xhr, status, error) ->
      try
        errors = $.parseJSON(xhr.responseText)
        errorMessage = "The rule wasn't saved!<ul>"
        for errorField of errors
          errorMessage += "<li>" + errorField + " " + errors[errorField].join(' and ') + "</li>"
        errorMessage += "</ul>"
      catch ex
        errorMessage = xhr.responseText
      
      showAlert errorMessage
      modal.find('.loading').hide()
    )
    
    $('#rule_order').val $('#rules li').length
    modal.find('select').selectToAutocomplete()
    modal.find('input[type=text], input:not([type])]').selectOnFocus()
    modal.find('a').on 'click', ->
      hideModal()
  
  setAltRowClass = ->
    helper = $(".ui-sortable-helper")
    rowClasses = ['', 'alt']
    passedHelper = false
    $('#rules li').each (index, item) ->
      $item = $(item)
      if $item.hasClass 'ui-sortable-helper'
        passedHelper = true
      else
        position = if passedHelper then index - 1 else index
        $item.removeClass().addClass rowClasses[position % 2]
  
  $('#rules ul').sortable
    cursor: 'move'
    axis: 'y'
    start: setAltRowClass
    stop: (event, ui) ->
      setAltRowClass()
      $('#rules li').each (index, item) ->
        $item = $(item)
        newIndex = $item.index().toString()
        if $item.data('rule-order') != newIndex
          id = $item.data('rule-id')
          $.ajax
            type: 'PUT'
            url: "<%= CGI.unescape url.rule_path('{id}') %>".replace(/{id}/, id)
            data: { 'rule[order]': newIndex }
          .done ->
            $item.data('rule-order', newIndex)
            $('#rules .autosave-status').text 'Saved at ' + getTimeString()
          .fail (jqXHR) ->
            try
              errors = $.parseJSON(jqXHR.responseText)
              errorMessage = "The " + modelName + " wasn't saved!<ul>"
              for errorField of errors
                errorMessage += "<li>" + errorField + " " + errors[errorField].join(' and ') + "</li>"
              errorMessage += "</ul>"
            catch ex
              errorMessage = jqXHR.responseText

            showAlert errorMessage
    sort: setAltRowClass
  
  $('#rules').on 'click', '.destroy', ->
    $this = $(this)
    if confirm("Do you want to delete the rule for " + $this.closest('tr').find('.search-text input').val() + "?")
      item = $this.closest('li')
      id = item.data('rule-id')
      $.ajax
        type: 'DELETE'
        url: "<%= CGI.unescape url.rule_path('{id}') %>".replace(/{id}/, id)
      .done ->
        item.slideUp ->
          item.remove()
          setAltRowClass()
      .fail (jqXHR) ->
        try
          errors = $.parseJSON(jqXHR.responseText)
          errorMessage = "The " + modelName + " wasn't saved!<ul>"
          for errorField of errors
            errorMessage += "<li>" + errorField + " " + errors[errorField].join(' and ') + "</li>"
          errorMessage += "</ul>"
        catch ex
          errorMessage = jqXHR.responseText
        
        showAlert errorMessage
