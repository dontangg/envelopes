# TODO:
# * Handle errors
# * Handle authorization
# * Always use callbacks?
# * Don't change content until loaded - right now we're changing envelopes, then AJAX-ing content in

app = angular.module 'envelopes', ['ngRoute']
  .config ($routeProvider, $locationProvider) ->

    if window.history && window.history.pushState
      $locationProvider.html5Mode true

    $routeProvider
      .when "/envelopes/:envelopeId",
        templateUrl: '<%= asset_path('partials/envelope.html') %>'
        controller: 'EnvelopeCtrl'
        resolve:
          data: envCtrl.loadData

app.run ['$rootScope', ($root) ->
  $root.$on '$routeChangeStart', ->
    # $root.loadingView = true
    console.log 'starting route change'
  $root.$on '$routeChangeSuccess', ->
    console.log 'route changed'
  $root.$on '$routeChangeError', (e, curr, prev, rejection) ->
    console.log 'route error', e, curr, prev, rejection
]

app.filter 'envelopeUrl', ->
  (envelope) ->
    name = envelope.name.toLowerCase().replace " ", "-"
    name = name.replace /[^a-zA-Z-]/, ""
    "/envelopes/#{envelope.id}-#{name}"




app.factory 'envelopeService', ['$http', '$q', ($http, $q) ->

  envelopesPromise = null
  getEnvelopes = ->
    return envelopesPromise if envelopesPromise

    envelopesPromise = $http.get('/envelopes.json')
      .then (response) ->
        data = response.data
        organized_envelopes = data[""]
        stack = data[""].slice() # Make a copy of the root-level array

        while stack.length
          env = stack.pop()
          if data[env.id]
            stack = stack.concat data[env.id]
            env.children = data[env.id]

        organized_envelopes

  findById = (id) ->
    getEnvelopes().then (envelopes) ->
      $q (resolve, reject) ->
        id = parseInt id
        stack = envelopes.slice()
        while stack.length
          envelope = stack.pop()
          if envelope.id == id
            resolve envelope
            return
          stack = stack.concat envelope.children if envelope.children

        reject "Unable to find envelope id: #{id}"

  all: getEnvelopes
  find: findById
]

app.factory 'transactionService', ['$http', ($http) ->

  find: (options) ->
    envelopeId = options.envelopeId
    options =
      params:
        show_transfers: options.showTransfers

    $http.get("/envelopes/#{envelopeId}/transactions.json", options)
      .then (response) ->
        response.data
]


app.directive 'leftPanel', ->
  templateUrl: '<%= asset_path('partials/left_panel.html') %>'
  controller: ['$scope', 'envelopeService', ($scope, envelopeService) ->
    envelopeService.all().then (envelopes) ->
      $scope.envelopes = envelopes
  ]



envCtrl = app.controller 'EnvelopeCtrl', ['$scope', '$routeParams', 'envelopeService', 'data',
  ($scope, $routeParams, envelopeService, data) ->
    envelopeService.find($routeParams.envelopeId).then (envelope) ->
      $scope.envelope = envelope
      $scope.transactions = data
]

envCtrl.loadData = ['$route', 'transactionService', ($route, transactionService) ->
  envelopeId = $route.current.params.envelopeId
  transactionService.find
    envelopeId: envelopeId
    showTransfers: true
]

