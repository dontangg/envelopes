# create a server that can be used later in proxy_pass (ie. http://envelopes)
# this server is listening on a unix socket
upstream envelopes {
  # fail_timeout=0 means we always retry an upstream even if it failed
  # to return a good HTTP response (in case the Unicorn master nukes a
  # single worker for timing out).

  # for UNIX domain socket setups:
  server unix:/tmp/unicorn.envelopes.sock fail_timeout=0;
}

server {
  # if you're running multiple servers, instead of "default" you should
  # put your main domain name here
  listen 80; # money.thewilsonpad.com deferred;
  server_name money.thewilsonpad.com;
  root /home/ec2-user/apps/envelopes/current/public;

  # if the request is for a static resource, nginx should serve it directly
  # and add a far future expires header to it, making the browser
  # cache the resource and navigate faster over the website
  # these settings will apply to urls that start with /assets/
  location ^~ /assets/ {
    gzip_static on;
    expires max;
    add_header Cache_Control public;
  }

  # specify the order to try urls
  # if /home/ec2-user/apps/envelopes/current/public/$uri/index.html exists, it will serve it first
  # then it will try the same url without /index.html at the end
  # if that doesn't work either, it will forward the request on to the @unicorn location defined below
  try_files $uri/index.html $uri @unicorn;

  # create a named location called @unicorn
  # this location just forwards the request to the unicorn server
  location @unicorn {
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header Host $http_host;
    proxy_redirect off;
    proxy_pass http://envelopes;
  }
  
  # if a 500, 502, 503, or 504 is encountered, display the /500.html file
  error_page 500 502 503 504 /500.html;

  client_max_body_size 4G;
  keepalive_timeout 10;
}
